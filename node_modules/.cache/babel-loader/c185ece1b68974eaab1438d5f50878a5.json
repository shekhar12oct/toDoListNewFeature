{"ast":null,"code":"var _jsxFileName = \"/media/dubey/Career Related Stuffs/Programminglanguages/reactJS/reactApps/todoapp/src/components/AddItem.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from 'react';\nimport './ViewItem.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddItem = ({\n  toDoLists,\n  setToDoLists\n}) => {\n  _s();\n\n  const [inputText, setInputText] = useState(\"\");\n\n  const changeHandler = e => {\n    setInputText(e.target.value);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    setToDoLists([...toDoLists, {\n      id: toDoLists.length ? toDoLists[toDoLists.length - 1].id + 1 : 1,\n      text: inputText,\n      isComplete: false,\n      isProgress: true,\n      isPending: false,\n      isAbandon: true\n    }]);\n\n    if (!inputText) {\n      console.log(\"Input String is Empty\");\n    }\n\n    setInputText(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form-input\",\n    onSubmit: submitHandler,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-field\",\n        type: \"text\",\n        name: \"text\",\n        placeholder: \"Enter Items to be Added\",\n        value: inputText,\n        onChange: changeHandler,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddItem, \"dJD6SWgw0R9Ie60kP99zu9/hxgQ=\");\n\n_c = AddItem;\nexport default AddItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddItem\");","map":{"version":3,"sources":["/media/dubey/Career Related Stuffs/Programminglanguages/reactJS/reactApps/todoapp/src/components/AddItem.js"],"names":["React","useState","AddItem","toDoLists","setToDoLists","inputText","setInputText","changeHandler","e","target","value","submitHandler","preventDefault","id","length","text","isComplete","isProgress","isPending","isAbandon","console","log"],"mappings":";;;AAAA,SAAQA,KAAR,EAAcC,QAAd,QAA6B,OAA7B;AACA,OAAO,gBAAP;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAWC,EAAAA;AAAX,CAAD,KAA8B;AAAA;;AAC1C,QAAM,CAACC,SAAD,EAAWC,YAAX,IAAyBL,QAAQ,CAAC,EAAD,CAAvC;;AAEA,QAAMM,aAAa,GAAEC,CAAD,IACpB;AACCF,IAAAA,YAAY,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACA,GAHD;;AAKA,QAAMC,aAAa,GAAEH,CAAD,IACpB;AACIA,IAAAA,CAAC,CAACI,cAAF;AACAR,IAAAA,YAAY,CAAC,CACT,GAAGD,SADM,EAET;AACIU,MAAAA,EAAE,EAACV,SAAS,CAACW,MAAV,GAAiBX,SAAS,CAACA,SAAS,CAACW,MAAV,GAAiB,CAAlB,CAAT,CAA8BD,EAA9B,GAAiC,CAAlD,GAAoD,CAD3D;AAEIE,MAAAA,IAAI,EAACV,SAFT;AAGIW,MAAAA,UAAU,EAAC,KAHf;AAIIC,MAAAA,UAAU,EAAC,IAJf;AAKIC,MAAAA,SAAS,EAAC,KALd;AAMIC,MAAAA,SAAS,EAAC;AANd,KAFS,CAAD,CAAZ;;AAWA,QAAG,CAACd,SAAJ,EACA;AACIe,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACH;;AACDf,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACH,GAnBD;;AAoBA,sBACI;AAAM,IAAA,SAAS,EAAC,YAAhB;AAA6B,IAAA,QAAQ,EAAEK,aAAvC;AAAA,2BACA;AAAA,6BACI;AAAO,QAAA,SAAS,EAAC,aAAjB;AACC,QAAA,IAAI,EAAC,MADN;AAEA,QAAA,IAAI,EAAC,MAFL;AAGA,QAAA,WAAW,EAAC,yBAHZ;AAIA,QAAA,KAAK,EAAEN,SAJP;AAKA,QAAA,QAAQ,EAAEE,aALV;AAMA,QAAA,SAAS;AANT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA1CD;;GAAML,O;;KAAAA,O;AA4CN,eAAeA,OAAf","sourcesContent":["import {React,useState} from 'react'\nimport './ViewItem.css';\n\nconst AddItem = ({toDoLists,setToDoLists}) => {\n    const [inputText,setInputText]=useState(\"\");\n\n    const changeHandler=(e)=>\n    {\n     setInputText(e.target.value);\n    }\n\n    const submitHandler=(e)=>\n    {\n        e.preventDefault()\n        setToDoLists([\n            ...toDoLists,\n            {\n                id:toDoLists.length?toDoLists[toDoLists.length-1].id+1:1,\n                text:inputText,\n                isComplete:false,\n                isProgress:true,\n                isPending:false,\n                isAbandon:true,  \n            }   \n        ])\n        if(!inputText)\n        {\n            console.log(\"Input String is Empty\");\n        }\n        setInputText(\"\");\n    }\n    return (\n        <form className=\"form-input\" onSubmit={submitHandler}>\n        <div>\n            <input className=\"input-field\"\n             type=\"text\"\n            name=\"text\"\n            placeholder=\"Enter Items to be Added\"\n            value={inputText}\n            onChange={changeHandler}\n            autoFocus\n            />\n        </div>\n        </form>\n    )\n}\n\nexport default AddItem;\n"]},"metadata":{},"sourceType":"module"}